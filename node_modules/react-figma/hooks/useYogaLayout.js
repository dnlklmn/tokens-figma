"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var yogaStream_1 = require("../yoga/yogaStream");
var operators_1 = require("rxjs/operators");
var flatYogaStyle = function (style) {
    return [
        style && style.position,
        style && style.top,
        style && style.left,
        style && style.right,
        style && style.bottom,
        style && style.width,
        style && style.height,
        style && style.minWidth,
        style && style.maxWidth,
        style && style.minHeight,
        style && style.maxHeight,
        style && style.flexDirection,
        style && style.flexWrap,
        style && style.alignItems,
        style && style.justifyContent,
        style && style.padding,
        style && style.paddingTop,
        style && style.paddingBottom,
        style && style.paddingLeft,
        style && style.paddingRight,
        style && style.paddingVertical,
        style && style.paddingHorizontal,
        style && style.margin,
        style && style.marginTop,
        style && style.marginBottom,
        style && style.marginLeft,
        style && style.marginRight,
        style && style.marginVertical,
        style && style.marginHorizontal,
        style && style.borderWidth,
        style && style.flex,
        style && style.flexGrow,
        style && style.flexShrink,
        style && style.flexBasis,
        style && style.aspectRatio,
        style && style.alignSelf,
        style && style.overflow
    ];
};
exports.useYogaLayout = function (props) {
    var nodeRef = props.nodeRef;
    // TODO: should be type-annotated to NullableCalculatedYogaLayoutProps
    //  but it leads to TS compiler bug
    var _a = React.useState(null), yogaProps = _a[0], setYogaProps = _a[1];
    React.useEffect(function () {
        var instance = nodeRef.current;
        var subject = yogaStream_1.$updatedYogaCoords.pipe(operators_1.filter(function (message) {
            return instance && message.reactId === instance.reactId;
        }), operators_1.map(function (message) { return message.props; }));
        var subscription = subject.subscribe(function (props) {
            setYogaProps(props);
        });
        return function () { return subscription.unsubscribe(); };
    }, []);
    React.useEffect(function () {
        var instance = nodeRef.current;
        yogaStream_1.updateYogaNode(instance);
    }, [
        props.children,
        props.width,
        props.height,
        props.characters,
        props.fontSize,
        props.loadedFont
    ].concat(flatYogaStyle(props.style)));
    return yogaProps;
};
//# sourceMappingURL=useYogaLayout.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dimensions_1 = require("./Dimensions");
var React = require("react");
function useWindowDimensions() {
    var _a = React.useState(function () { return Dimensions_1.Dimensions.get('window'); }), dimensions = _a[0], setDimensions = _a[1];
    React.useEffect(function () {
        function handleChange(_a) {
            var window = _a.window;
            if (dimensions.width !== window.width ||
                dimensions.height !== window.height ||
                dimensions.scale !== window.scale ||
                dimensions.fontScale !== window.fontScale) {
                setDimensions(window);
            }
        }
        Dimensions_1.Dimensions.addEventListener('change', handleChange);
        // We might have missed an update between calling `get` in render and
        // `addEventListener` in this handler, so we set it here. If there was
        // no change, React will filter out this update as a no-op.
        handleChange({ window: Dimensions_1.Dimensions.get('window') });
        return function () {
            Dimensions_1.Dimensions.removeEventListener('change', handleChange);
        };
    }, [dimensions]);
    return dimensions;
}
exports.useWindowDimensions = useWindowDimensions;
//# sourceMappingURL=useWindowDimensions.js.map
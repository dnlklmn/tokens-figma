import { TextStyleProperties } from '../styleTransformers/transformTextStyleProperties';
import { CommonStyleProps } from '../types';
export declare const useTextStyle: (style: Partial<TextStyleProperties>, params: CommonStyleProps) => {
    textStyleId: any;
    color?: string;
    fontFamily?: string;
    fontWeight?: "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900";
    fontStyle?: "normal" | "italic" | "solid";
    fontSize?: number;
    textAlign?: "left" | "center" | "auto" | "right" | "justify";
    lineHeight?: import("../helpers/size").TSize;
    letterSpacing?: import("../helpers/size").TSize;
    textDecorationLine?: "none" | "underline" | "line-through";
    textShadowColor?: string;
    textShadowOffset?: {
        width: number;
        height: number;
    };
    textShadowRadius?: number;
} | {
    color?: string;
    fontFamily?: string;
    fontWeight?: "normal" | "bold" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900";
    fontStyle?: "normal" | "italic" | "solid";
    fontSize?: number;
    textAlign?: "left" | "center" | "auto" | "right" | "justify";
    lineHeight?: import("../helpers/size").TSize;
    letterSpacing?: import("../helpers/size").TSize;
    textDecorationLine?: "none" | "underline" | "line-through";
    textShadowColor?: string;
    textShadowOffset?: {
        width: number;
        height: number;
    };
    textShadowRadius?: number;
    textStyleId?: string;
};

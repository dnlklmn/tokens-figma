declare type ValueWithDimension = {
    value: number;
    type: 'px' | 'percentage';
} | {
    type: 'auto';
};
export declare const transformDimension: (value: import("../helpers/size").TSize) => ValueWithDimension;
declare type ValueWithDimensionMapper<A, B, C> = {
    px: (f: (number: any) => A) => ValueWithDimensionMapper<A, B, C>;
    percentage: (f: (number: any) => B) => ValueWithDimensionMapper<A, B, C>;
    auto: (f: () => C) => ValueWithDimensionMapper<A, B, C>;
    value: () => A | B | C;
};
export declare const transformDimensionMapper: <A, B, C>(value: import("../helpers/size").TSize) => ValueWithDimensionMapper<A, B, C>;
export {};

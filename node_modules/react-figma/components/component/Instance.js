"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var transformLayoutStyleProperties_1 = require("../../styleTransformers/transformLayoutStyleProperties");
var useYogaLayout_1 = require("../../hooks/useYogaLayout");
var __1 = require("../..");
var all = require("../../index");
var useSelectionChange_1 = require("../../hooks/useSelectionChange");
var transformAutoLayoutToYoga_1 = require("../../styleTransformers/transformAutoLayoutToYoga");
var rpc_1 = require("../../rpc");
var useOnLayoutHandler_1 = require("../../hooks/useOnLayoutHandler");
var useNodeIdCallback_1 = require("../../hooks/useNodeIdCallback");
var getComponentByType = function (type) {
    var componentName = type.charAt(0) + type.substring(1).toLowerCase();
    return all[componentName];
};
var Override = function (props) {
    var overrideName = props.overrideName, parentRef = props.parentRef, _a = props.overrides, overrides = _a === void 0 ? {} : _a;
    var _b = React.useState(false), hasInstanceItemNode = _b[0], setHasInstanceItemNode = _b[1];
    var instanceItemNodeRef = React.useRef();
    React.useEffect(function () {
        var getNode = function () { return __awaiter(_this, void 0, void 0, function () {
            var instanceItemNode;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, rpc_1.api.findNodeByName(parentRef.current, overrideName)];
                    case 1:
                        instanceItemNode = _a.sent();
                        instanceItemNodeRef.current = instanceItemNode;
                        setHasInstanceItemNode(true);
                        return [2 /*return*/];
                }
            });
        }); };
        getNode();
    }, []);
    if (hasInstanceItemNode && instanceItemNodeRef.current) {
        var instanceItemNode = instanceItemNodeRef.current;
        var Component = getComponentByType(instanceItemNode.type);
        return React.createElement(Component, __assign({ key: overrideName, preventResizing: true, node: instanceItemNode }, overrides));
    }
    else {
        return null;
    }
};
var Instance = function (props) {
    var _a = React.useState(false), isHaveNode = _a[0], setHaveNode = _a[1];
    var nodeRef = React.useRef();
    useSelectionChange_1.useSelectionChange(nodeRef, props);
    useNodeIdCallback_1.useNodeIdCallback(nodeRef, props.onNodeId);
    var style = __assign({}, __1.StyleSheet.flatten(props.style), transformAutoLayoutToYoga_1.transformAutoLayoutToYoga(props));
    var componentProps = __assign({}, transformLayoutStyleProperties_1.transformLayoutStyleProperties(style), props, { style: style });
    var yogaProps = useYogaLayout_1.useYogaLayout(__assign({ nodeRef: nodeRef }, componentProps));
    useOnLayoutHandler_1.useOnLayoutHandler(yogaProps, props);
    return (React.createElement("instance", __assign({}, componentProps, yogaProps, { innerRef: nodeRef, innerRefCallback: function () { return setHaveNode(true); } }), isHaveNode && props.overrides
        ? Object.keys(props.overrides).map(function (overrideName) {
            return (React.createElement(Override, { overrideName: overrideName, parentRef: nodeRef, overrides: props.overrides[overrideName] }));
        })
        : null));
};
exports.Instance = Instance;
//# sourceMappingURL=Instance.js.map
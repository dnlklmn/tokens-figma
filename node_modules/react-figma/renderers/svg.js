"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var baseNodeMixin_1 = require("../mixins/baseNodeMixin");
var layoutMixin_1 = require("../mixins/layoutMixin");
var saveStyleMixin_1 = require("../mixins/saveStyleMixin");
var exportMixin_1 = require("../mixins/exportMixin");
var blendMixin_1 = require("../mixins/blendMixin");
var frameMixin_1 = require("../mixins/frameMixin");
var hashCode_1 = require("../helpers/hashCode");
var sceneNodeMixin_1 = require("../mixins/sceneNodeMixin");
var safeGetPluginData_1 = require("../helpers/safeGetPluginData");
var constraintsMixin_1 = require("../mixins/constraintsMixin");
var createNodeFromSvg = function (source) {
    var node = figma.createNodeFromSvg(source);
    node.setPluginData('svgHash', hashCode_1.hashCode(source));
    return node;
};
exports.svg = function (node) { return function (props) {
    var frameNode = node || props.node || createNodeFromSvg(props.source);
    var savedHash = safeGetPluginData_1.safeGetPluginData('svgHash')(frameNode);
    if (savedHash != hashCode_1.hashCode(props.source)) {
        var newSvg = figma.createNodeFromSvg(props.source);
        layoutMixin_1.layoutMixin(newSvg)(props);
        frameNode.children.forEach(function (child) { return child.remove(); });
        newSvg.children.forEach(function (child) {
            frameNode.appendChild(child);
        });
        newSvg.remove();
        node.setPluginData('svgHash', hashCode_1.hashCode(props.source));
    }
    saveStyleMixin_1.saveStyleMixin(frameNode)(props);
    baseNodeMixin_1.baseNodeMixin(frameNode)(props);
    layoutMixin_1.layoutMixin(frameNode)(props);
    exportMixin_1.exportMixin(frameNode)(props);
    blendMixin_1.blendMixin(frameNode)(props);
    frameMixin_1.frameMixin(frameNode)(props);
    sceneNodeMixin_1.sceneNodeMixin(frameNode)(props);
    constraintsMixin_1.constraintsMixin(frameNode)(props);
    return frameNode;
}; };
//# sourceMappingURL=svg.js.map